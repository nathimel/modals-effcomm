{
  "[[0 0 0]\n [0 0 1]]": {
    "string": "(* (Q_2 ) (f_3 ))",
    "arr": [
      [
        0,
        0,
        0
      ],
      [
        0,
        0,
        1
      ]
    ],
    "complexity": 4
  },
  "[[0 0 0]\n [0 1 0]]": {
    "string": "(* (Q_2 ) (f_2 ))",
    "arr": [
      [
        0,
        0,
        0
      ],
      [
        0,
        1,
        0
      ]
    ],
    "complexity": 4
  },
  "[[0 0 0]\n [0 1 1]]": {
    "string": "(* (Q_2 ) (+ (f_2 ) (f_3 )))",
    "arr": [
      [
        0,
        0,
        0
      ],
      [
        0,
        1,
        1
      ]
    ],
    "complexity": 6
  },
  "[[0 0 0]\n [1 0 0]]": {
    "string": "(* (Q_2 ) (f_1 ))",
    "arr": [
      [
        0,
        0,
        0
      ],
      [
        1,
        0,
        0
      ]
    ],
    "complexity": 4
  },
  "[[0 0 0]\n [1 0 1]]": {
    "string": "(* (Q_2 ) (+ (f_1 ) (f_3 )))",
    "arr": [
      [
        0,
        0,
        0
      ],
      [
        1,
        0,
        1
      ]
    ],
    "complexity": 6
  },
  "[[0 0 0]\n [1 1 0]]": {
    "string": "(* (Q_2 ) (+ (f_1 ) (f_2 )))",
    "arr": [
      [
        0,
        0,
        0
      ],
      [
        1,
        1,
        0
      ]
    ],
    "complexity": 6
  },
  "[[0 0 0]\n [1 1 1]]": {
    "string": "(Q_2 )",
    "arr": [
      [
        0,
        0,
        0
      ],
      [
        1,
        1,
        1
      ]
    ],
    "complexity": 2
  },
  "[[0 0 1]\n [0 0 0]]": {
    "string": "(* (Q_1 ) (f_3 ))",
    "arr": [
      [
        0,
        0,
        1
      ],
      [
        0,
        0,
        0
      ]
    ],
    "complexity": 4
  },
  "[[0 0 1]\n [0 0 1]]": {
    "string": "(f_3 )",
    "arr": [
      [
        0,
        0,
        1
      ],
      [
        0,
        0,
        1
      ]
    ],
    "complexity": 2
  },
  "[[0 0 1]\n [0 1 0]]": {
    "string": "(+ (* (Q_1 ) (f_3 )) (* (Q_2 ) (f_2 )))",
    "arr": [
      [
        0,
        0,
        1
      ],
      [
        0,
        1,
        0
      ]
    ],
    "complexity": 8
  },
  "[[0 0 1]\n [0 1 1]]": {
    "string": "(+ (f_3 ) (* (Q_2 ) (f_2 )))",
    "arr": [
      [
        0,
        0,
        1
      ],
      [
        0,
        1,
        1
      ]
    ],
    "complexity": 6
  },
  "[[0 0 1]\n [1 0 0]]": {
    "string": "(+ (* (Q_1 ) (f_3 )) (* (Q_2 ) (f_1 )))",
    "arr": [
      [
        0,
        0,
        1
      ],
      [
        1,
        0,
        0
      ]
    ],
    "complexity": 8
  },
  "[[0 0 1]\n [1 0 1]]": {
    "string": "(+ (f_3 ) (* (Q_2 ) (f_1 )))",
    "arr": [
      [
        0,
        0,
        1
      ],
      [
        1,
        0,
        1
      ]
    ],
    "complexity": 6
  },
  "[[0 0 1]\n [1 1 0]]": {
    "string": "(+ (* (Q_2 ) (+ (f_1 ) (f_2 ))) (* (Q_1 ) (f_3 )))",
    "arr": [
      [
        0,
        0,
        1
      ],
      [
        1,
        1,
        0
      ]
    ],
    "complexity": 10
  },
  "[[0 0 1]\n [1 1 1]]": {
    "string": "(+ (Q_2 ) (* (Q_1 ) (f_3 )))",
    "arr": [
      [
        0,
        0,
        1
      ],
      [
        1,
        1,
        1
      ]
    ],
    "complexity": 6
  },
  "[[0 1 0]\n [0 0 0]]": {
    "string": "(* (Q_1 ) (f_2 ))",
    "arr": [
      [
        0,
        1,
        0
      ],
      [
        0,
        0,
        0
      ]
    ],
    "complexity": 4
  },
  "[[0 1 0]\n [0 0 1]]": {
    "string": "(+ (* (Q_1 ) (f_2 )) (* (Q_2 ) (f_3 )))",
    "arr": [
      [
        0,
        1,
        0
      ],
      [
        0,
        0,
        1
      ]
    ],
    "complexity": 8
  },
  "[[0 1 0]\n [0 1 0]]": {
    "string": "(f_2 )",
    "arr": [
      [
        0,
        1,
        0
      ],
      [
        0,
        1,
        0
      ]
    ],
    "complexity": 2
  },
  "[[0 1 0]\n [0 1 1]]": {
    "string": "(+ (f_2 ) (* (Q_2 ) (f_3 )))",
    "arr": [
      [
        0,
        1,
        0
      ],
      [
        0,
        1,
        1
      ]
    ],
    "complexity": 6
  },
  "[[0 1 0]\n [1 0 0]]": {
    "string": "(+ (* (Q_1 ) (f_2 )) (* (Q_2 ) (f_1 )))",
    "arr": [
      [
        0,
        1,
        0
      ],
      [
        1,
        0,
        0
      ]
    ],
    "complexity": 8
  },
  "[[0 1 0]\n [1 0 1]]": {
    "string": "(+ (* (Q_2 ) (+ (f_1 ) (f_3 ))) (* (Q_1 ) (f_2 )))",
    "arr": [
      [
        0,
        1,
        0
      ],
      [
        1,
        0,
        1
      ]
    ],
    "complexity": 10
  },
  "[[0 1 0]\n [1 1 0]]": {
    "string": "(+ (f_2 ) (* (Q_2 ) (f_1 )))",
    "arr": [
      [
        0,
        1,
        0
      ],
      [
        1,
        1,
        0
      ]
    ],
    "complexity": 6
  },
  "[[0 1 0]\n [1 1 1]]": {
    "string": "(+ (Q_2 ) (* (Q_1 ) (f_2 )))",
    "arr": [
      [
        0,
        1,
        0
      ],
      [
        1,
        1,
        1
      ]
    ],
    "complexity": 6
  },
  "[[0 1 1]\n [0 0 0]]": {
    "string": "(* (Q_1 ) (+ (f_2 ) (f_3 )))",
    "arr": [
      [
        0,
        1,
        1
      ],
      [
        0,
        0,
        0
      ]
    ],
    "complexity": 6
  },
  "[[0 1 1]\n [0 0 1]]": {
    "string": "(+ (f_3 ) (* (Q_1 ) (f_2 )))",
    "arr": [
      [
        0,
        1,
        1
      ],
      [
        0,
        0,
        1
      ]
    ],
    "complexity": 6
  },
  "[[0 1 1]\n [0 1 0]]": {
    "string": "(+ (f_2 ) (* (Q_1 ) (f_3 )))",
    "arr": [
      [
        0,
        1,
        1
      ],
      [
        0,
        1,
        0
      ]
    ],
    "complexity": 6
  },
  "[[0 1 1]\n [0 1 1]]": {
    "string": "(+ (f_3 ) (f_2 ))",
    "arr": [
      [
        0,
        1,
        1
      ],
      [
        0,
        1,
        1
      ]
    ],
    "complexity": 4
  },
  "[[0 1 1]\n [1 0 0]]": {
    "string": "(+ (* (Q_1 ) (+ (f_2 ) (f_3 ))) (* (Q_2 ) (f_1 )))",
    "arr": [
      [
        0,
        1,
        1
      ],
      [
        1,
        0,
        0
      ]
    ],
    "complexity": 10
  },
  "[[0 1 1]\n [1 0 1]]": {
    "string": "(+ (f_3 ) (* (Q_1 ) (f_2 )) (* (Q_2 ) (f_1 )))",
    "arr": [
      [
        0,
        1,
        1
      ],
      [
        1,
        0,
        1
      ]
    ],
    "complexity": 10
  },
  "[[0 1 1]\n [1 1 0]]": {
    "string": "(+ (f_2 ) (* (Q_1 ) (f_3 )) (* (Q_2 ) (f_1 )))",
    "arr": [
      [
        0,
        1,
        1
      ],
      [
        1,
        1,
        0
      ]
    ],
    "complexity": 10
  },
  "[[0 1 1]\n [1 1 1]]": {
    "string": "(+ (Q_2 ) (* (Q_1 ) (+ (f_2 ) (f_3 ))))",
    "arr": [
      [
        0,
        1,
        1
      ],
      [
        1,
        1,
        1
      ]
    ],
    "complexity": 8
  },
  "[[1 0 0]\n [0 0 0]]": {
    "string": "(* (Q_1 ) (f_1 ))",
    "arr": [
      [
        1,
        0,
        0
      ],
      [
        0,
        0,
        0
      ]
    ],
    "complexity": 4
  },
  "[[1 0 0]\n [0 0 1]]": {
    "string": "(+ (* (Q_1 ) (f_1 )) (* (Q_2 ) (f_3 )))",
    "arr": [
      [
        1,
        0,
        0
      ],
      [
        0,
        0,
        1
      ]
    ],
    "complexity": 8
  },
  "[[1 0 0]\n [0 1 0]]": {
    "string": "(+ (* (Q_1 ) (f_1 )) (* (Q_2 ) (f_2 )))",
    "arr": [
      [
        1,
        0,
        0
      ],
      [
        0,
        1,
        0
      ]
    ],
    "complexity": 8
  },
  "[[1 0 0]\n [0 1 1]]": {
    "string": "(+ (* (Q_2 ) (+ (f_2 ) (f_3 ))) (* (Q_1 ) (f_1 )))",
    "arr": [
      [
        1,
        0,
        0
      ],
      [
        0,
        1,
        1
      ]
    ],
    "complexity": 10
  },
  "[[1 0 0]\n [1 0 0]]": {
    "string": "(f_1 )",
    "arr": [
      [
        1,
        0,
        0
      ],
      [
        1,
        0,
        0
      ]
    ],
    "complexity": 2
  },
  "[[1 0 0]\n [1 0 1]]": {
    "string": "(+ (f_1 ) (* (Q_2 ) (f_3 )))",
    "arr": [
      [
        1,
        0,
        0
      ],
      [
        1,
        0,
        1
      ]
    ],
    "complexity": 6
  },
  "[[1 0 0]\n [1 1 0]]": {
    "string": "(+ (f_1 ) (* (Q_2 ) (f_2 )))",
    "arr": [
      [
        1,
        0,
        0
      ],
      [
        1,
        1,
        0
      ]
    ],
    "complexity": 6
  },
  "[[1 0 0]\n [1 1 1]]": {
    "string": "(+ (Q_2 ) (* (Q_1 ) (f_1 )))",
    "arr": [
      [
        1,
        0,
        0
      ],
      [
        1,
        1,
        1
      ]
    ],
    "complexity": 6
  },
  "[[1 0 1]\n [0 0 0]]": {
    "string": "(* (Q_1 ) (+ (f_1 ) (f_3 )))",
    "arr": [
      [
        1,
        0,
        1
      ],
      [
        0,
        0,
        0
      ]
    ],
    "complexity": 6
  },
  "[[1 0 1]\n [0 0 1]]": {
    "string": "(+ (f_3 ) (* (Q_1 ) (f_1 )))",
    "arr": [
      [
        1,
        0,
        1
      ],
      [
        0,
        0,
        1
      ]
    ],
    "complexity": 6
  },
  "[[1 0 1]\n [0 1 0]]": {
    "string": "(+ (* (Q_1 ) (+ (f_1 ) (f_3 ))) (* (Q_2 ) (f_2 )))",
    "arr": [
      [
        1,
        0,
        1
      ],
      [
        0,
        1,
        0
      ]
    ],
    "complexity": 10
  },
  "[[1 0 1]\n [0 1 1]]": {
    "string": "(+ (f_3 ) (* (Q_1 ) (f_1 )) (* (Q_2 ) (f_2 )))",
    "arr": [
      [
        1,
        0,
        1
      ],
      [
        0,
        1,
        1
      ]
    ],
    "complexity": 10
  },
  "[[1 0 1]\n [1 0 0]]": {
    "string": "(+ (f_1 ) (* (Q_1 ) (f_3 )))",
    "arr": [
      [
        1,
        0,
        1
      ],
      [
        1,
        0,
        0
      ]
    ],
    "complexity": 6
  },
  "[[1 0 1]\n [1 0 1]]": {
    "string": "(+ (f_3 ) (f_1 ))",
    "arr": [
      [
        1,
        0,
        1
      ],
      [
        1,
        0,
        1
      ]
    ],
    "complexity": 4
  },
  "[[1 0 1]\n [1 1 0]]": {
    "string": "(+ (f_1 ) (* (Q_1 ) (f_3 )) (* (Q_2 ) (f_2 )))",
    "arr": [
      [
        1,
        0,
        1
      ],
      [
        1,
        1,
        0
      ]
    ],
    "complexity": 10
  },
  "[[1 0 1]\n [1 1 1]]": {
    "string": "(+ (Q_2 ) (* (Q_1 ) (+ (f_1 ) (f_3 ))))",
    "arr": [
      [
        1,
        0,
        1
      ],
      [
        1,
        1,
        1
      ]
    ],
    "complexity": 8
  },
  "[[1 1 0]\n [0 0 0]]": {
    "string": "(* (Q_1 ) (+ (f_1 ) (f_2 )))",
    "arr": [
      [
        1,
        1,
        0
      ],
      [
        0,
        0,
        0
      ]
    ],
    "complexity": 6
  },
  "[[1 1 0]\n [0 0 1]]": {
    "string": "(+ (* (Q_1 ) (+ (f_1 ) (f_2 ))) (* (Q_2 ) (f_3 )))",
    "arr": [
      [
        1,
        1,
        0
      ],
      [
        0,
        0,
        1
      ]
    ],
    "complexity": 10
  },
  "[[1 1 0]\n [0 1 0]]": {
    "string": "(+ (f_2 ) (* (Q_1 ) (f_1 )))",
    "arr": [
      [
        1,
        1,
        0
      ],
      [
        0,
        1,
        0
      ]
    ],
    "complexity": 6
  },
  "[[1 1 0]\n [0 1 1]]": {
    "string": "(+ (f_2 ) (* (Q_1 ) (f_1 )) (* (Q_2 ) (f_3 )))",
    "arr": [
      [
        1,
        1,
        0
      ],
      [
        0,
        1,
        1
      ]
    ],
    "complexity": 10
  },
  "[[1 1 0]\n [1 0 0]]": {
    "string": "(+ (f_1 ) (* (Q_1 ) (f_2 )))",
    "arr": [
      [
        1,
        1,
        0
      ],
      [
        1,
        0,
        0
      ]
    ],
    "complexity": 6
  },
  "[[1 1 0]\n [1 0 1]]": {
    "string": "(+ (f_1 ) (* (Q_1 ) (f_2 )) (* (Q_2 ) (f_3 )))",
    "arr": [
      [
        1,
        1,
        0
      ],
      [
        1,
        0,
        1
      ]
    ],
    "complexity": 10
  },
  "[[1 1 0]\n [1 1 0]]": {
    "string": "(+ (f_2 ) (f_1 ))",
    "arr": [
      [
        1,
        1,
        0
      ],
      [
        1,
        1,
        0
      ]
    ],
    "complexity": 4
  },
  "[[1 1 0]\n [1 1 1]]": {
    "string": "(+ (Q_2 ) (* (Q_1 ) (+ (f_1 ) (f_2 ))))",
    "arr": [
      [
        1,
        1,
        0
      ],
      [
        1,
        1,
        1
      ]
    ],
    "complexity": 8
  },
  "[[1 1 1]\n [0 0 0]]": {
    "string": "(Q_1 )",
    "arr": [
      [
        1,
        1,
        1
      ],
      [
        0,
        0,
        0
      ]
    ],
    "complexity": 2
  },
  "[[1 1 1]\n [0 0 1]]": {
    "string": "(+ (Q_1 ) (* (Q_2 ) (f_3 )))",
    "arr": [
      [
        1,
        1,
        1
      ],
      [
        0,
        0,
        1
      ]
    ],
    "complexity": 6
  },
  "[[1 1 1]\n [0 1 0]]": {
    "string": "(+ (Q_1 ) (* (Q_2 ) (f_2 )))",
    "arr": [
      [
        1,
        1,
        1
      ],
      [
        0,
        1,
        0
      ]
    ],
    "complexity": 6
  },
  "[[1 1 1]\n [0 1 1]]": {
    "string": "(+ (* (Q_2 ) (+ (f_2 ) (f_3 ))) (Q_1 ))",
    "arr": [
      [
        1,
        1,
        1
      ],
      [
        0,
        1,
        1
      ]
    ],
    "complexity": 8
  },
  "[[1 1 1]\n [1 0 0]]": {
    "string": "(+ (Q_1 ) (* (Q_2 ) (f_1 )))",
    "arr": [
      [
        1,
        1,
        1
      ],
      [
        1,
        0,
        0
      ]
    ],
    "complexity": 6
  },
  "[[1 1 1]\n [1 0 1]]": {
    "string": "(+ (* (Q_2 ) (+ (f_1 ) (f_3 ))) (Q_1 ))",
    "arr": [
      [
        1,
        1,
        1
      ],
      [
        1,
        0,
        1
      ]
    ],
    "complexity": 8
  },
  "[[1 1 1]\n [1 1 0]]": {
    "string": "(+ (* (Q_2 ) (+ (f_1 ) (f_2 ))) (Q_1 ))",
    "arr": [
      [
        1,
        1,
        1
      ],
      [
        1,
        1,
        0
      ]
    ],
    "complexity": 8
  },
  "[[1 1 1]\n [1 1 1]]": {
    "string": "(1 )",
    "arr": [
      [
        1,
        1,
        1
      ],
      [
        1,
        1,
        1
      ]
    ],
    "complexity": 1
  }
}